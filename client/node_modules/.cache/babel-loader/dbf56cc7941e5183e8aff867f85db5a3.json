{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function useAuth(code) {\n  _s();\n\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n  useEffect(() => {\n    axios.post('http://localhost:3001/login', {\n      code\n    }).then(res => {\n      setAccessToken(res.data.accessToken);\n      setRefreshToken(res.data.refreshToken);\n      setExpiresIn(res.data.expiresIn);\n      window.history.pushState({}, null, '/');\n    }).catch(err => {\n      window.location = '/';\n    });\n  }, [code]);\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios.post('http://localhost:3001/refresh', {\n        refreshToken\n      }).then(res => {\n        setAccessToken(res.data.accessToken);\n        setExpiresIn(res.data.expiresIn);\n      }).catch(err => {\n        window.location = '/';\n      });\n    }, (expiresIn - 60) * 1000);\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn]);\n  return accessToken;\n}\n\n_s(useAuth, \"E9KOao32uIhQ/xJLaKV8nLvpvcw=\");","map":{"version":3,"sources":["/Users/apostolosdedeloudis/Documents/GitHub/Spotify-Clone/client/src/useAuth.jsx"],"names":["React","useState","useEffect","axios","useAuth","code","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","post","then","res","data","window","history","pushState","catch","err","location","interval","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACS,IAAN,CAAW,6BAAX,EAA0C;AAAEP,MAAAA;AAAF,KAA1C,EAAoDQ,IAApD,CAAyDC,GAAG,IAAI;AAC5DP,MAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAAST,WAAV,CAAd;AACAG,MAAAA,eAAe,CAACK,GAAG,CAACC,IAAJ,CAASP,YAAV,CAAf;AACAG,MAAAA,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASL,SAAV,CAAZ;AACAM,MAAAA,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,IAA7B,EAAmC,GAAnC;AACH,KALD,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdJ,MAAAA,MAAM,CAACK,QAAP,GAAkB,GAAlB;AACH,KAPD;AAQH,GATQ,EASN,CAAChB,IAAD,CATM,CAAT;AAWAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACM,YAAD,IAAiB,CAACE,SAAtB,EAAiC;AACjC,UAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BpB,MAAAA,KAAK,CAACS,IAAN,CAAW,+BAAX,EAA4C;AAAEJ,QAAAA;AAAF,OAA5C,EAA8DK,IAA9D,CAAmEC,GAAG,IAAI;AACtEP,QAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAAST,WAAV,CAAd;AACAK,QAAAA,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASL,SAAV,CAAZ;AACH,OAHD,EAGGS,KAHH,CAGUC,GAAD,IAAS;AACdJ,QAAAA,MAAM,CAACK,QAAP,GAAkB,GAAlB;AACH,OALD;AAMH,KAP2B,EAOzB,CAACX,SAAS,GAAG,EAAb,IAAmB,IAPM,CAA5B;AAQA,WAAO,MAAMc,aAAa,CAACF,QAAD,CAA1B;AACH,GAXQ,EAWN,CAACd,YAAD,EAAeE,SAAf,CAXM,CAAT;AAaA,SAAOJ,WAAP;AACH;;GA9BuBF,O","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport default function useAuth(code) {\n    const [accessToken, setAccessToken] = useState()\n    const [refreshToken, setRefreshToken] = useState()\n    const [expiresIn, setExpiresIn] = useState()\n\n    useEffect(() => {\n        axios.post('http://localhost:3001/login', { code }).then(res => {\n            setAccessToken(res.data.accessToken)\n            setRefreshToken(res.data.refreshToken)\n            setExpiresIn(res.data.expiresIn)\n            window.history.pushState({}, null, '/')\n        }).catch((err) => {\n            window.location = '/'\n        })\n    }, [code])\n\n    useEffect(() => {\n        if (!refreshToken || !expiresIn) return \n        const interval = setInterval(() => {\n            axios.post('http://localhost:3001/refresh', { refreshToken }).then(res => {\n                setAccessToken(res.data.accessToken)\n                setExpiresIn(res.data.expiresIn)\n            }).catch((err) => {\n                window.location = '/'\n            }) \n        }, (expiresIn - 60) * 1000)\n        return () => clearInterval(interval)\n    }, [refreshToken, expiresIn])\n\n    return accessToken\n}"]},"metadata":{},"sourceType":"module"}